# vim: set ft=nginx:

# -----------------------------------------------------------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------------------------------------------------------
#
# author: Sebastiaan Van Hoecke
# mail: sebastiaan@sevaho.io
#
# NOTE:
#
# -----------------------------------------------------------------------------------------------------------------------------

user nginx;
worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {

    worker_connections  1024;

}


http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    ##
    # Security
    ##

    add_header X-Robots-Tag "none";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Permitted-Cross-Domain-Policies "none";
    add_header X-Download-Options "noopen";

    ##
    # Map
    ##

    map $sent_http_content_type $expires {

        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;

    }

    ##
    # HTTP
    ##

    server {

        listen 80;
        listen [::]:80;

        server_name localhost;

        server_tokens off;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        return 301 https://$server_name$request_uri;

    }

    ##
    # HTTPS
    ##

    server {

        listen 443 ssl; # http2 proxy_protocol;
        listen [::]:443 ssl; # http2 proxy_protocol;

        server_name localhost;

        ssl                         on;
        ssl_session_timeout         1d;
        ssl_session_cache           shared:SSL:50m;
        ssl_session_tickets         off; 
        ssl_prefer_server_ciphers   on;
        ssl_dhparam                 /etc/dhparam/dh.pem;
        ssl_stapling                on;
        ssl_stapling_verify         on;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;

        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-SEED-SHA:DHE-RSA-CAMELLIA128-SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS';

        ssl_certificate             /etc/ssl/tls.crt;
        ssl_certificate_key         /etc/ssl/tls.key;

        server_tokens off;

        index index.html;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        expires $expires;   

        location ~ ^/(scripts|styles)/(.*)$ {

            root .tmp/;
            error_page 404 =200 @asset_pass;
            try_files $uri =404;
            break;

        }

        location @asset_pass {

            root /var/www/html;
            try_files $uri =404;

        }

        location / {

            root /var/www/html;
            expires -1;
            add_header Pragma "no-cache";
            add_header Cache-Control "no-store, no-cache, must-revalicate, post-check=0 pre-check=0";
            try_files $uri $uri/ /index.html =404;

        }

    }

}
